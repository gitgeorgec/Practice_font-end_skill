{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authAction.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectAction.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","className","NavLink","to","Link","onClick","profile","initials","SignedOutLink","state","firebase","links","uid","SignedInLinks","SignedOutLinks","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","_ref","project","title","authorFirstName","authorLastName","createAt","calendar","ProjectList","projects","projects_ProjectSummary","Dashboard","_this$props","this","console","log","projects_ProjectList","dashboard_Notifications","Redirect","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","authoeFirstName","SignIn","email","password","handleChange","e","_this","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","name","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","authorId","add","objectSpread","Date","App","BrowserRouter","layout_Navbar","Switch","Route","exact","path","component","DashBoard","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","arguments","length","undefined","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","__REDUX_DEVTOOLS_EXTENSION__","f","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"wSAqBeA,cAAQ,KANI,SAACC,GACxB,MAAO,CACHC,QAAU,kBAAMD,ECDb,SAACA,EAAUE,EAAXC,IACcC,EADyBD,EAAjBC,eAGhBC,OAAOJ,UAAUK,KAAK,WAC3BN,EAAS,CAACO,KAAK,2BDCZR,CAhBM,SAACS,GAClB,OACIC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SACVH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,GAAG,WAAZ,gBACJL,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMD,GAAG,IAAIE,QAASR,EAAMP,SAA5B,YACJQ,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,GAAG,IAAIF,UAAU,mCAAmCJ,EAAMS,QAAQC,cEE5EC,EATO,WAClB,OACIV,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SACVH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,GAAG,WAAZ,WACJL,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,GAAG,WAAZ,YCmBDf,cAPS,SAACqB,GACrB,MAAO,CACHf,KAAMe,EAAMC,SAAShB,KACrBY,QAASG,EAAMC,SAASJ,UAIjBlB,CApBA,SAACS,GAAU,IACdH,EAAkBG,EAAlBH,KAAMY,EAAYT,EAAZS,QACRK,EAAQjB,EAAKkB,IAAId,EAAAC,EAAAC,cAACa,EAAD,CAAcP,QAASA,IAAYR,EAAAC,EAAAC,cAACc,EAAD,MAC1D,OACIhB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMD,GAAG,IAAIF,UAAU,cAAvB,aACCU,uBCgBFI,EA1BO,SAAClB,GAAU,IACrBmB,EAAkBnB,EAAlBmB,cACR,OACIlB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAhB,iBACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iBACTe,GAAiBA,EAAcC,IAAI,SAAAC,GAChC,OACIpB,EAAAC,EAAAC,cAAA,MAAImB,IAAKD,EAAKE,IACVtB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAaiB,EAAKG,MADtC,SAEIvB,EAAAC,EAAAC,cAAA,YAAOkB,EAAKI,SACZxB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACVsB,IAAOL,EAAKM,KAAKC,UAAUC,mBCFrDC,EAZQ,SAAAC,GAAe,IAAbC,EAAaD,EAAbC,QACrB,OACI/B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kCACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wCACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAc4B,EAAQC,OACtChC,EAAAC,EAAAC,cAAA,oBAAY6B,EAAQE,gBAApB,IAAsCF,EAAQG,gBAC9ClC,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAasB,IAAOM,EAAQI,SAASR,UAAUS,eCS7DC,EAdK,SAAAP,GAAgB,IAAdQ,EAAcR,EAAdQ,SAClB,OACItC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACVmC,GAAYA,EAASnB,IAAI,SAAAY,GACtB,OACI/B,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMD,GAAI,YAAY0B,EAAQT,GAAID,IAAKU,EAAQT,IAC3CtB,EAAAC,EAAAC,cAACqC,EAAD,CAAgBR,QAASA,kCCF3CS,mLACM,IAAAC,EACsCC,KAAK3C,MAAvCuC,EADJG,EACIH,SAAU1C,EADd6C,EACc7C,KAAMsB,EADpBuB,EACoBvB,cAExB,OADAyB,QAAQC,IAAI1B,GACRtB,EAAKkB,IAELd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAC2C,EAAD,CAAaP,SAAYA,KAE7BtC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACXH,EAAAC,EAAAC,cAAC4C,EAAD,CAAe5B,cAAeA,OAR3BlB,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAU1C,GAAG,mBAJhB2C,aA4BTC,cACX3D,YAToB,SAACqB,GACrB,MAAO,CACH2B,SAAS3B,EAAMuC,UAAUC,QAAQb,SACjC1C,KAAKe,EAAMC,SAAShB,KACpBsB,cAAeP,EAAMuC,UAAUC,QAAQjC,iBAM3CkC,2BAAiB,CACb,CAACC,WAAY,WAAYC,QAAQ,CAAC,WAAY,SAC9C,CAACD,WAAY,gBAAiBE,MAAM,EAAGD,QAAQ,CAAC,OAAQ,WAJjDL,CAMbT,GCGaS,cACX3D,YAXoB,SAACqB,EAAO6C,GAC5B,IAAMlC,EAAKkC,EAASC,MAAMC,OAAOpC,GAC3BgB,EAAW3B,EAAMuC,UAAUS,KAAKrB,SAEtC,MAAO,CACJP,QAFaO,EAASA,EAAShB,GAAI,KAGnC1B,KAAKe,EAAMC,SAAShB,QAMvBwD,2BAAiB,CACb,CAACC,WAAY,cAHNJ,CAtCO,SAAClD,GAAU,IACrBgC,EAAiBhC,EAAjBgC,QACR,OADyBhC,EAATH,KACPkB,IACNiB,EAES/B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qCACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAc4B,EAAQC,OACtChC,EAAAC,EAAAC,cAAA,SAAI6B,EAAQP,UAEhBxB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uCACXH,EAAAC,EAAAC,cAAA,wBAAgB6B,EAAQ6B,gBAAxB,IAA0C7B,EAAQG,gBAClDlC,EAAAC,EAAAC,cAAA,WAAMuB,IAAOM,EAAQI,SAASR,UAAUS,eAOxDpC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,wBAnBOF,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAU1C,GAAG,sBCJ9BwD,6MACFlD,MAAQ,CACJmD,MAAM,GACNC,SAAS,MAGbC,aAAe,SAACC,GACZC,EAAKC,SAALC,OAAAC,EAAA,EAAAD,CAAA,GACKH,EAAEK,OAAOhD,GAAI2C,EAAEK,OAAOC,WAI/BC,aAAe,SAACP,GACZA,EAAEQ,iBACFP,EAAKnE,MAAM2E,OAAOR,EAAKvD,gFAGnB,IAAA8B,EACwBC,KAAK3C,MAAzB4E,EADJlC,EACIkC,UACR,OAFIlC,EACe7C,KACXkB,IAAUd,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAU1C,GAAG,MAE3BL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAAQyE,SAAUlC,KAAK8B,cACnCxE,EAAAC,EAAAC,cAAA,MAAIC,UAAU,2BAAd,WACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAO2E,QAAQ,SAAf,SACA7E,EAAAC,EAAAC,cAAA,SAAOJ,KAAK,QAAQgF,KAAK,QAAQxD,GAAG,QAAQyD,SAAUrC,KAAKsB,gBAE/DhE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAO2E,QAAQ,YAAf,YACA7E,EAAAC,EAAAC,cAAA,SAAOJ,KAAK,WAAWgF,KAAK,WAAWxD,GAAG,WAAWyD,SAAUrC,KAAKsB,gBAExEhE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,gCAAlB,SACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACVwE,EAAW3E,EAAAC,EAAAC,cAAA,SAAIyE,GAAe,gBAnCtC3B,aAyDN1D,cAbS,SAACqB,GACrB,MAAO,CACHgE,UAAWhE,EAAMf,KAAK+E,UACtB/E,KAAMe,EAAMC,SAAShB,OAIF,SAACL,GACxB,MAAO,CACHmF,OAAQ,SAACM,GAAD,OAAWzF,GR1DJ0F,EQ0DoBD,ERzDhC,SAACzF,EAAUE,EAAXqC,IACcnC,EADyBmC,EAAjBnC,eAGhBC,OAAOsF,2BACZD,EAAYnB,MACZmB,EAAYlB,UACdlE,KAAK,WACHN,EAAS,CAACO,KAAM,oBACjBqF,MAAM,SAACC,GACN7F,EAAS,CAACO,KAAM,cAAesF,aAVrB,IAACH,KQ8DR3F,CAA6CuE,GCzDtDwB,6MACF1E,MAAQ,CACJmD,MAAM,GACNC,SAAS,GACTuB,UAAU,GACVC,SAAS,MAGbvB,aAAe,SAACC,GACZC,EAAKC,SAALC,OAAAC,EAAA,EAAAD,CAAA,GACKH,EAAEK,OAAOhD,GAAI2C,EAAEK,OAAOC,WAI/BC,aAAe,SAACP,GACZA,EAAEQ,iBACFP,EAAKnE,MAAMyF,OAAOtB,EAAKvD,gFAGnB,IAAA8B,EACwBC,KAAK3C,MAAzBH,EADJ6C,EACI7C,KAAM+E,EADVlC,EACUkC,UACd,OAAG/E,EAAKkB,IAAUd,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAU1C,GAAG,YAE3BL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAAQyE,SAAUlC,KAAK8B,cACnCxE,EAAAC,EAAAC,cAAA,MAAIC,UAAU,2BAAd,WACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAO2E,QAAQ,SAAf,SACA7E,EAAAC,EAAAC,cAAA,SAAOJ,KAAK,QAAQgF,KAAK,QAAQxD,GAAG,QAAQyD,SAAUrC,KAAKsB,gBAE/DhE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAO2E,QAAQ,YAAf,YACA7E,EAAAC,EAAAC,cAAA,SAAOJ,KAAK,WAAWgF,KAAK,WAAWxD,GAAG,WAAWyD,SAAUrC,KAAKsB,gBAExEhE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAO2E,QAAQ,aAAf,aACA7E,EAAAC,EAAAC,cAAA,SAAOJ,KAAK,OAAOgF,KAAK,YAAYxD,GAAG,YAAYyD,SAAUrC,KAAKsB,gBAEtEhE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAO2E,QAAQ,YAAf,YACA7E,EAAAC,EAAAC,cAAA,SAAOJ,KAAK,OAAOgF,KAAK,WAAWxD,GAAG,WAAWyD,SAAUrC,KAAKsB,gBAEpEhE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,gCAAlB,WACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,SAAIyE,cA7CX3B,aAmEN1D,cAbS,SAACqB,GACrB,MAAO,CACHf,KAAMe,EAAMC,SAAShB,KACrB+E,UAAWhE,EAAMf,KAAK+E,YAIH,SAACpF,GACxB,MAAO,CACHiG,OAAQ,SAACC,GAAD,OAAalG,ET3CP,SAACkG,GACnB,OAAO,SAAClG,EAAUE,EAAXiG,GAAqD,IAA/B/F,EAA+B+F,EAA/B/F,YAAagG,EAAkBD,EAAlBC,aAChC/E,EAAWjB,IACXuD,EAAYyC,IAElB/E,EAAShB,OAAOgG,+BACZH,EAAQ3B,MACR2B,EAAQ1B,UACVlE,KAAK,SAACgG,GACJ,OAAO3C,EAAUG,WAAW,SAASyC,IAAID,EAAKtE,KAAKT,KAAKiF,IAAI,CACxDT,UAAUG,EAAQH,UAClBC,SAASE,EAAQF,SACjB9E,SAAUgF,EAAQH,UAAU,GAAGG,EAAQF,SAAS,OAErD1F,KAAK,WACJN,EAAS,CAACO,KAAK,qBAChBqF,MAAM,SAACC,GACN7F,EAAS,CAACO,KAAK,eAAesF,WS0BJI,CAAOC,OAI9BnG,CAA6C+F,WCnEtDW,6MACFrF,MAAQ,CACJqB,MAAM,GACNR,QAAQ,MAGZwC,aAAe,SAACC,GACZC,EAAKC,SAALC,OAAAC,EAAA,EAAAD,CAAA,GACKH,EAAEK,OAAOhD,GAAI2C,EAAEK,OAAOC,WAI/BC,aAAe,SAACP,GACZA,EAAEQ,iBACFP,EAAKnE,MAAMkG,cAAc/B,EAAKvD,OAC9BuD,EAAKnE,MAAMmG,QAAQC,KAAK,8EAKxB,OADiBzD,KAAK3C,MAAdH,KACCkB,IAELd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAAQyE,SAAUlC,KAAK8B,cACnCxE,EAAAC,EAAAC,cAAA,MAAIC,UAAU,2BAAd,sBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAO2E,QAAQ,SAAf,SACA7E,EAAAC,EAAAC,cAAA,SAAOJ,KAAK,OAAOgF,KAAK,QAAQxD,GAAG,QAAQyD,SAAUrC,KAAKsB,gBAE9DhE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAO2E,QAAQ,WAAf,WACA7E,EAAAC,EAAAC,cAAA,YAAU4E,KAAK,UAAUxD,GAAG,UAAUnB,UAAU,uBAAuB4E,SAAUrC,KAAKsB,gBAE1FhE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,gCAAlB,aAdGH,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAU1C,GAAG,mBApBZ2C,aAwDb1D,cAbS,SAACqB,GACrB,MAAO,CACHf,KAAKe,EAAMC,SAAShB,OAID,SAACL,GACxB,MAAO,CACH0G,cAAe,SAAClE,GAAD,OAAaxC,ECxDP,SAACwC,GAC1B,OAAO,SAACxC,EAAUE,EAAXqC,GAAqDA,EAA/BnC,YAA+B,IAElDuD,GAAYyC,EAFsC7D,EAAlB6D,gBAGhCnF,EAAUf,IAAWmB,SAASJ,QAC9B4F,EAAW3G,IAAWmB,SAAShB,KAAKkB,IAC1CoC,EAAUG,WAAW,YAAYgD,IAAjCjC,OAAAkC,EAAA,EAAAlC,CAAA,GACOrC,EADP,CAEIE,gBAAgBzB,EAAQ8E,UACxBpD,eAAe1B,EAAQ+E,SACvBa,SAASA,EACTjE,SAAU,IAAIoE,QAEjB1G,KAAK,WACFN,EAAS,CACLO,KAAM,iBACNiC,cAGPoD,MAAM,SAACC,GACJ7F,EAAS,CACLO,KAAK,uBACLsF,WDkC6Ba,CAAclE,OAK5CzC,CAA6C0G,GEjC7CQ,mLAjBX,OACExG,EAAAC,EAAAC,cAACuG,EAAA,EAAD,KACEzG,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACwG,EAAD,MACA1G,EAAAC,EAAAC,cAACyG,EAAA,EAAD,KACE3G,EAAAC,EAAAC,cAAC0G,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWC,IACjChH,EAAAC,EAAAC,cAAC0G,EAAA,EAAD,CAAOE,KAAK,eAAeC,UAAWE,IACtCjH,EAAAC,EAAAC,cAAC0G,EAAA,EAAD,CAAOE,KAAK,UAAUC,UAAWlD,IACjC7D,EAAAC,EAAAC,cAAC0G,EAAA,EAAD,CAAOE,KAAK,UAAUC,UAAW1B,IACjCrF,EAAAC,EAAAC,cAAC0G,EAAA,EAAD,CAAOE,KAAK,UAAUC,UAAWf,cAX3BhD,aCGEkE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS5D,MACvB,2DClBN,IAAM6D,EAAY,CACd3C,UAAU,MAqCC4C,EAlCK,WAA+B,IAA9B5G,EAA8B6G,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtBF,EAAWK,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC/C,OAAQC,EAAO7H,MACX,IAAK,cAED,OADA6C,QAAQC,IAAI+E,EAAOvC,KACZhB,OAAAkC,EAAA,EAAAlC,CAAA,GACAzD,EADP,CAEIgE,UAAW,iBAEnB,IAAK,gBAED,OADAhC,QAAQC,IAAI,iBACLwB,OAAAkC,EAAA,EAAAlC,CAAA,GACAzD,EADP,CAEIgE,UAAU,OAElB,IAAK,kBAED,OADAhC,QAAQC,IAAI,mBACLjC,EACX,IAAK,eAED,OADAgC,QAAQC,IAAI,gBACLwB,OAAAkC,EAAA,EAAAlC,CAAA,GACAzD,EADP,CAEIgE,UAAWgD,EAAOvC,IAAIwC,UAE9B,IAAK,iBAED,OADAjF,QAAQC,IAAI,kBACLwB,OAAAkC,EAAA,EAAAlC,CAAA,GACAzD,EADP,CAEIgE,UAAU,OAElB,QACI,OAAOhE,IClCb2G,EAAY,CACdhF,SAAS,CACL,CAAChB,GAAG,IAAKU,MAAM,QAAQR,QAAQ,kBAC/B,CAACF,GAAG,IAAKU,MAAM,QAAQR,QAAQ,kBAC/B,CAACF,GAAG,IAAKU,MAAM,QAAQR,QAAQ,oBAiBxBqG,EAbQ,WAA+B,IAA9BlH,EAA8B6G,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtBF,EAAWK,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAClD,OAAQC,EAAO7H,MACX,IAAK,iBAED,OADA6C,QAAQC,IAAI+E,EAAO5F,SACZpB,EACX,IAAK,sBAED,OADAgC,QAAQC,IAAI+E,EAAOvC,KACZzE,EACX,QACI,OAAOA,YCHJmH,EARKC,YAAgB,CAChCnI,KAAK2H,EACLxF,QAAQ8F,EACR3E,UAAW8E,mBACXpH,SAAUqH,4DCIZrH,IAASsH,cATI,CACXC,OAAQ,0CACRC,WAAY,iCACZC,YAAa,wCACbC,UAAW,iBACXC,cAAe,6BACfC,kBAAmB,iBAIrB5H,IAASsC,YAAYuF,SAAS,CAAEC,uBAAsB,IAEvC9H,QAAf,ECJI+H,EAASC,YACXd,EACA7E,YACI4F,YAAgBC,IAAMC,kBAAkB,CAACpJ,0BAAagG,+BACtDqD,yBAAeC,GACfC,6BAAmBD,EAAU,CAACE,wBAAuB,EAAMC,YAAY,QAASC,mBAAmB,IACnGlC,OAAOmC,6BAA8BnC,OAAOmC,+BAAiC,SAAAC,GAAC,OAAEA,KAIxFZ,EAAMa,oBAAoB3J,KAAK,WAC3B4J,IAASC,OACL1J,EAAAC,EAAAC,cAACyJ,EAAA,EAAD,CAAUhB,MAAOA,GACb3I,EAAAC,EAAAC,cAAC0J,EAAD,OACSC,SAASC,eAAe,SLsGvC,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMpK,KAAK,SAAAqK,GACjCA,EAAaC","file":"static/js/main.df3eeb7c.chunk.js","sourcesContent":["import React from 'react'\nimport { NavLink, Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { signOut } from '../../store/actions/authAction'\n\nconst SignedInLink = (props) => {\n    return (\n        <ul className=\"right\">\n            <li><NavLink to=\"/create\">New Project</NavLink></li>\n            <li><Link to=\"/\" onClick={props.signOut}>Log Out</Link></li>\n            <li><NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">{props.profile.initials}</NavLink></li>\n        </ul>\n    )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signOut:  () => dispatch(signOut())\n    }\n}\n\nexport default connect(null,mapDispatchToProps)(SignedInLink)","export const signIn = (credentials) => {\n    return (dispatch, getState, {getFirebase}) => {\n        const firebase = getFirebase()\n\n        firebase.auth().signInWithEmailAndPassword(\n            credentials.email,\n            credentials.password\n        ).then(() => {\n            dispatch({type: 'LOGIN_SUCCESS'})\n        }).catch((err) => {\n            dispatch({type: 'LOGIN_ERROR', err})\n        })\n    }\n}\n\nexport const signOut = () => {\n    return (dispatch, getState, {getFirebase}) => {\n        const firebase = getFirebase()\n\n        firebase.auth().signOut().then(()=>{\n            dispatch({type:'SIGNOUT_SUCCESS'})\n        })\n    }\n}\n\nexport const signUp = (newUser) => {\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n        const firebase = getFirebase()\n        const firestore = getFirestore()\n\n        firebase.auth().createUserWithEmailAndPassword(\n            newUser.email,\n            newUser.password\n        ).then((resp) => {\n            return firestore.collection('users').doc(resp.user.uid).set({\n                firstName:newUser.firstName,\n                lastName:newUser.lastName,\n                initials: newUser.firstName[0]+newUser.lastName[0]\n            })\n        }).then(()=>{\n            dispatch({type:'SIGNUP_SUCCESS'})\n        }).catch((err)=>{\n            dispatch({type:\"SIGNUP_ERROR\",err})\n        })\n    }\n}","import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nconst SignedOutLink = () => {\n    return (\n        <ul className=\"right\">\n            <li><NavLink to=\"/signup\">Signup</NavLink></li>\n            <li><NavLink to=\"/signin\">Login</NavLink></li>\n        </ul>\n    )\n}\n\nexport default SignedOutLink","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport SignedInLink from './SignedInLinks'\nimport SignedOutLink from './SignedOutLinks'\nimport { connect } from 'react-redux'\n\nconst Navbar = (props) => {\n    const { auth, profile } = props\n    const links = auth.uid?<SignedInLink profile={profile} />:<SignedOutLink/>\n    return (\n        <nav className=\"nav-wrapper grey darken-3\">\n            <div className=\"container\">\n                <Link to=\"/\" className=\"brand-logo\">MarioPlan</Link>\n                {links}\n            </div>\n        </nav>\n    )\n}\n\nconst mapStateToProps = (state) =>{\n    return {\n        auth: state.firebase.auth,\n        profile: state.firebase.profile\n    }\n}\n\nexport default connect(mapStateToProps)(Navbar)","import React from 'react'\nimport moment from 'moment'\n\nconst Notifications = (props) => {\n    const { notifications } = props\n    return (\n        <div className=\"section\">\n            <div className=\"card z-depth-0\">\n                <div className=\"card-content\">\n                    <span className=\"card-title\">Notifications</span>\n                    <ul className=\"notifications\">\n                        {notifications && notifications.map(item=>{\n                            return (\n                                <li key={item.id}>\n                                    <span className=\"pink-text\">{item.user}</span> &nsp;\n                                    <span>{item.content}</span>\n                                    <div className=\"grey-text note-date\">\n                                        {moment(item.time.toDate()).fromNow()}\n                                    </div>\n                                </li>\n                            )\n                        })}\n                    </ul>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Notifications","import React from 'react'\nimport moment from 'moment'\n\nconst ProjectSummary = ({project}) => {\n    return (\n        <div className=\"card z-depth-0 project-summary\">\n            <div className=\"card-content grey-text text-darken-3\">\n                <span className=\"card-title\">{project.title}</span>\n                <p>post by {project.authorFirstName} {project.authorLastName}</p>\n                <p className=\"gery-text\">{moment(project.createAt.toDate()).calendar()}</p>\n            </div>\n        </div>\n    )\n}\n\nexport default ProjectSummary","import React from 'react'\nimport ProjectSummary from './ProjectSummary'\nimport { Link } from 'react-router-dom'\n\nconst ProjectList = ({projects}) => {\n    return (\n        <div className=\"project-list section\">\n            {projects && projects.map(project=>{\n                return(\n                    <Link to={\"/project/\"+project.id} key={project.id}>\n                        <ProjectSummary project={project} />\n                    </Link>\n                )\n            })}\n        </div>\n    )\n}\n\nexport default ProjectList","import React ,{ Component } from 'react'\nimport Notifications from './Notifications'\nimport ProjectList from '../projects/ProjectList'\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport { Redirect }from 'react-router-dom'\n\nclass Dashboard extends Component{\n    render(){\n        const { projects, auth, notifications } = this.props\n        console.log(notifications)\n        if(!auth.uid)return<Redirect to=\"/signin\" />\n        return(\n            <div className=\"dashboard container\">\n                <div className=\"row\">\n                    <div className=\"col s12 m6\">\n                        <ProjectList projects = {projects} />\n                    </div>\n                    <div className=\"col s12 m5 offset-m1\">\n                        <Notifications notifications={notifications}/>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        projects:state.firestore.ordered.projects,\n        auth:state.firebase.auth,\n        notifications: state.firestore.ordered.notifications\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        {collection: 'projects', orderBy:['createAt', 'desc']},\n        {collection: 'notifications', limit:3, orderBy:['time', 'desc']}\n    ])\n)(Dashboard)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport { Redirect }from 'react-router-dom'\nimport moment from 'moment'\n\nconst ProjecDetails = (props) => {\n    const { project,auth } = props\n    if(!auth.uid)return<Redirect to=\"/signin\" />\n    if(project){\n        return (\n                <div className=\"container section project-details\">\n                    <div className=\"card z-depth-0\">\n                        <div className=\"card-content\">\n                            <span className=\"card-title\">{project.title}</span>\n                            <p>{project.content}</p>\n                        </div>\n                        <div className=\"card-acion gery lighten-4 grey-text\">\n                            <div>Posted by {project.authoeFirstName} {project.authorLastName}</div>\n                            <div>{moment(project.createAt.toDate()).calendar()}</div>\n                        </div>\n                    </div>\n                </div>\n            )\n    } else {\n        return (\n            <div className=\"continer center\">\n                <p>Loading...</p>\n            </div>\n        )\n    }\n    \n}\n\nconst mapStateToProps = (state, ownProps) => {\n    const id = ownProps.match.params.id\n    const projects = state.firestore.data.projects\n    const project = projects?projects[id]:null\n    return {\n       project,\n       auth:state.firebase.auth\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        {collection: 'projects'}\n    ])\n)(ProjecDetails)","import React ,{ Component } from 'react'\nimport { connect } from 'react-redux'\nimport { signIn } from '../../store/actions/authAction'\nimport { Redirect }from 'react-router-dom'\n\nclass SignIn extends Component {\n    state = {\n        email:\"\",\n        password:\"\"\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]:e.target.value\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault()\n        this.props.signIn(this.state)\n    }\n\n    render(){\n        const { authError, auth } = this.props\n        if(auth.uid)return<Redirect to=\"/\" />\n        return(\n            <div className=\"container\">\n                <form className=\"white\" onSubmit={this.handleSubmit}>\n                    <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"email\" name=\"email\" id=\"email\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\">password</label>\n                        <input type=\"password\" name=\"password\" id=\"password\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\n                        <div className=\"red-text center\">\n                            {authError? <p>{authError}</p>:null}\n                        </div>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        authError: state.auth.authError,\n        auth: state.firebase.auth\n    }\n}\n\nconst mapDispatchToProps = (dispatch) =>{\n    return {\n        signIn: (creds) => dispatch(signIn(creds))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)","import React ,{ Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nimport { signUp } from '../../store/actions/authAction'\n\nclass SignUp extends Component {\n    state = {\n        email:\"\",\n        password:\"\",\n        firstName:\"\",\n        lastName:\"\",\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]:e.target.value\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault()\n        this.props.signUp(this.state)\n    }\n\n    render(){\n        const { auth, authError } = this.props\n        if(auth.uid)return<Redirect to=\"/signin\" />\n        return(\n            <div className=\"container\">\n                <form className=\"white\" onSubmit={this.handleSubmit}>\n                    <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"email\" name=\"email\" id=\"email\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\">password</label>\n                        <input type=\"password\" name=\"password\" id=\"password\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"firstName\">firstName</label>\n                        <input type=\"text\" name=\"firstName\" id=\"firstName\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"lastName\">lastName</label>\n                        <input type=\"text\" name=\"lastName\" id=\"lastName\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\n                        <div className=\"red-text center\">\n                            <p>{authError}</p>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth,\n        authError: state.auth.authError\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signUp: (newUser) => dispatch(signUp(newUser))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)","import React ,{ Component } from 'react'\nimport { connect } from 'react-redux'\nimport { createProject } from '../../store/actions/projectAction'\nimport { Redirect }from 'react-router-dom'\n\nclass CreateProject extends Component {\n    state = {\n        title:\"\",\n        content:\"\"\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]:e.target.value\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault()\n        this.props.createProject(this.state)\n        this.props.history.push(\"/\")\n    }\n\n    render(){\n        const { auth } = this.props\n        if(!auth.uid)return<Redirect to=\"/signin\" />\n        return(\n            <div className=\"container\">\n                <form className=\"white\" onSubmit={this.handleSubmit}>\n                    <h5 className=\"grey-text text-darken-3\">Create New Project</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"title\">title</label>\n                        <input type=\"text\" name=\"title\" id=\"title\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"content\">content</label>\n                        <textarea name=\"content\" id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n        auth:state.firebase.auth\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        createProject: (project) => dispatch(createProject(project))\n    }\n}\n \n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)","export const createProject = (project) => {\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n        //make async all to database\n        const firestore = getFirestore()\n        const profile = getState().firebase.profile\n        const authorId = getState().firebase.auth.uid\n        firestore.collection('projects').add({\n            ...project,\n            authorFirstName:profile.firstName,\n            authorLastName:profile.lastName,\n            authorId:authorId,\n            createAt: new Date()\n        })\n        .then(()=>{\n            dispatch({\n                type: \"CREATE_PROJECT\",\n                project\n            })\n        })\n        .catch((err)=>{\n            dispatch({\n                type:\"CREATE_PROJECT_ERROR\",\n                err\n            })\n        })\n    }\n}","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport Navber from './components/layout/Navbar'\nimport DashBoard from './components/dashboard/Dashboard'\nimport ProjectDetails from './components/projects/ProjectDetails'\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateProject from './components/projects/CreateProject';\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div>\n          <Navber />\n          <Switch>\n            <Route exact path=\"/\" component={DashBoard} />\n            <Route path=\"/project/:id\" component={ProjectDetails} />\n            <Route path=\"/signin\" component={SignIn} />\n            <Route path=\"/signup\" component={SignUp} />\n            <Route path=\"/create\" component={CreateProject} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n    authError:null\n}\n\nconst authReducer = (state = initState, action) => {\n    switch (action.type) {\n        case 'LOGIN_ERROR':\n            console.log(action.err)\n            return {\n                ...state,\n                authError: 'LOGIN FAILED'\n            }\n        case 'LOGIN_SUCCESS':\n            console.log(\"login success\")\n            return {\n                ...state,\n                authError:null\n            }\n        case 'SIGNOUT_SUCCESS':\n            console.log(\"signout success\")\n            return state\n        case 'SIGNUP_ERROR':\n            console.log('signup error')\n            return {\n                ...state,\n                authError: action.err.message\n            }\n        case 'SIGNUP_SUCCESS':\n            console.log('signup success')\n            return {\n                ...state,\n                authError:null\n            }\n        default:\n            return state\n    }\n}\n\nexport default authReducer","const initState = {\n    projects:[\n        {id:'1', title:\"hello\",content:\"blah blah balh\"},\n        {id:'2', title:\"hello\",content:\"blah blah balh\"},\n        {id:'3', title:\"hello\",content:\"blah blah balh\"},\n    ]\n}\n\nconst projectReducer = (state = initState, action) => {\n    switch (action.type) {\n        case \"CREATE_PROJECT\":\n            console.log(action.project)\n            return state\n        case \"CREATE_PROJEC_ERROR\":\n            console.log(action.err)\n            return state\n        default:\n            return state\n    }\n}\n\nexport default projectReducer","import authReducer from './authReducer'\nimport projectReducer from './projectReducer'\nimport { combineReducers } from 'redux'\nimport { firestoreReducer } from 'redux-firestore'\nimport { firebaseReducer } from 'react-redux-firebase'\n\nconst rootReducer = combineReducers({\n    auth:authReducer,\n    project:projectReducer,\n    firestore: firestoreReducer,\n    firebase: firebaseReducer\n})\n\n\nexport default rootReducer","import firebase from 'firebase/app'\nimport 'firebase/firestore' \nimport 'firebase/auth'\n  \n  // Initialize Firebase\n  var config = {\n    apiKey: \"AIzaSyCbqICYc7l178IkcC1qwTBYqfYNlHRmWp8\",\n    authDomain: \"talkroom-ed6ba.firebaseapp.com\",\n    databaseURL: \"https://talkroom-ed6ba.firebaseio.com\",\n    projectId: \"talkroom-ed6ba\",\n    storageBucket: \"talkroom-ed6ba.appspot.com\",\n    messagingSenderId: \"918476779959\"\n  };\n  \n  firebase.initializeApp(config);\n  firebase.firestore().settings({ timestampsInSnapshots:true })\n\n  export default firebase\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { reduxFirestore, getFirestore } from 'redux-firestore'\nimport {  reactReduxFirebase, getFirebase } from 'react-redux-firebase'\nimport fbConfig from './config/fbConfig'\n\nconst store =  createStore(\n    rootReducer, \n    compose(\n        applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n        reduxFirestore(fbConfig),\n        reactReduxFirebase(fbConfig, {useFirestoreForProfile:true, userProfile:'users', attachAuthIsReady: true}),\n        window.__REDUX_DEVTOOLS_EXTENSION__? window.__REDUX_DEVTOOLS_EXTENSION__() : f=>f\n    )\n)\n\nstore.firebaseAuthIsReady.then(()=>{\n    ReactDOM.render(\n        <Provider store={store}>\n            <App />\n        </Provider>, document.getElementById('root'));\n    \n    // If you want your app to work offline and load faster, you can change\n    // unregister() to register() below. Note this comes with some pitfalls.\n    // Learn more about service workers: http://bit.ly/CRA-PWA\n    serviceWorker.unregister();\n})\n\n"],"sourceRoot":""}